import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'

    id 'application'

    id 'maven-publish'
    id "com.google.cloud.artifactregistry.gradle-plugin" version "2.2.0"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repository.apache.org/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    flatDir {
        dirs 'dependencies'
    }

    maven {
        def artifactRegistryMavenSecret = System.getenv("ARTIFACT_TOKEN")
        url "https://us-central1-maven.pkg.dev/onfinality-prod/subquery-nextgen"
        credentials {
            username = "_json_key_base64"
            password = "$artifactRegistryMavenSecret"
        }
        authentication {
            basic(BasicAuthentication)
        }
    }
}

ext {
    jacksonVersion = '2.14.0'
    flinkVersion = '1.16.0'
    log4jVersion = "2.17.1"
    junitVersion = "5.9.0"
    kotlinVersion = '1.7.22'
    web3jVersion = '5.0.0'
}

// NOTE: We cannot use "compileOnly" or "shadow" configurations since then we could not run code
// in the IDE or with "gradle run". We also cannot exclude transitive dependencies from the
// shadowJar yet (see https://github.com/johnrengelman/shadow/issues/159).
// -> Explicitly define the // libraries we want to be included in the "flinkShadowJar" configuration!
configurations {
    flinkShadowJar // dependencies which go into the shadowJar
    // always exclude these (also from transitive dependencies) since they are provided by Flink
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'org.apache.logging.log4j'
}

dependencies {
    implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
    implementation "org.apache.flink:flink-clients:${flinkVersion}"
    implementation "org.apache.flink:flink-csv:${flinkVersion}"
    implementation "org.apache.flink:flink-connector-files:${flinkVersion}"
    implementation "org.apache.flink:flink-connector-jdbc:${flinkVersion}"
    implementation "org.apache.flink:flink-gs-fs-hadoop:${flinkVersion}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"

    implementation "com.google.protobuf:protobuf-java:3.21.9"
    implementation "org.postgresql:postgresql:42.5.0"
    implementation "com.google.code.gson:gson:2.9.1"
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.apache.bval:bval-jsr:2.0.6'

    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"

    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"

    testImplementation "org.jetbrains.kotlin:kotlin-test:${kotlinVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    implementation "org.web3j:abi:$web3jVersion"

    runtimeClasspath files("build/classes/kotlin/main")
}

group = 'network.subquery'
version = '0.1'
description = 'SubQuery NextGen'
mainClassName = 'MyFlinkApp'

java.sourceCompatibility = JavaVersion.VERSION_11
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
applicationDefaultJvmArgs = ["-Dlog4j.configurationFile=log4j2.properties"]

sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar
    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar
    javadoc.classpath += configurations.flinkShadowJar
}
run.classpath = sourceSets.main.runtimeClasspath


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId  'network.subquery'
            artifactId = 'nextgen'
            version = '0.0.1'
            from components.java
        }
    }
    repositories {
        maven {
            def artifactRegistryMavenSecret = System.getenv("ARTIFACT_TOKEN")
            url "https://us-central1-maven.pkg.dev/onfinality-prod/subquery-nextgen"
            credentials {
                username = "_json_key_base64"
                password = "$artifactRegistryMavenSecret"
            }
            authentication {
                basic(BasicAuthentication)
            }
        }

    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

jar {
    manifest {
        attributes 'Built-By': "SubQuery Pte. Ltd.",
                'Build-Jdk': System.getProperty('java.version'),
                'Main-Class': "$mainClassName"
    }
}

test {
    useJUnitPlatform()
}
